name: Build and Check Code Quality for Staging

on:
  push:
    branches:
      - staging

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Gunakan Node.js 16 untuk mendukung fitur ECMAScript terbaru

      - name: Install dependencies
        run: npm install

      - name: Install Babel dependencies
        run: npm install --save-dev @babel/core @babel/preset-env babel-jest  # Instal Babel

      - name: Run Jest Tests
        run: npm test -- --coverage
        continue-on-error: true  # Jika ingin melanjutkan meskipun ada error pada test

  lint:
    runs-on: ubuntu-latest
    needs: test  # Pastikan linting dilakukan setelah test
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Sesuaikan dengan versi Node.js yang kamu gunakan

      - name: Install dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint
        continue-on-error: true  # Jika ingin melanjutkan meskipun ada error di linting

    SonarCloud:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v5.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=zicorociz
            -Dsonar.projectKey=zicorociz_cobadevops3
            -Dsonar.projectName=cobadevops3
            -Dsonar.projectVersion=1.0
            -Dsonar.sources=.
            -Dsonar.tests=.
            -Dsonar.inclusions=**/*.js,**/*.jsx,**/*.ts,**/*.tsx
            -Dsonar.exclusions=**/node_modules/**,**/dist/**,**/coverage/**
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.login=${{ secrets.SONAR_TOKEN }}

      - name: SonarCloud Quality Gate
        uses: SonarSource/sonarqube-quality-gate-action@v1.1.0
        with:
          projectKey: zicorociz_cobadevops3
          token: ${{ secrets.SONAR_TOKEN }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          

  # Job untuk build dan push Docker image
  
  build-and-push:
    runs-on: ubuntu-latest
    needs: SonarCloud  # Pastikan build dan push Docker dilakukan setelah SonarCloud
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/my-app:staging
